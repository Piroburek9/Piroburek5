import React, { useState } from 'react';
import { Users, TrendingUp, Calendar, BookOpen, Plus, Settings, Download, MessageSquare, Target, Award, Clock, BarChart3, PieChart, LineChart } from 'lucide-react';

export const TeacherDashboard: React.FC = () => {
	const [currentLanguage, setCurrentLanguage] = useState<'ru' | 'kk'>('ru');
	const [activeTab, setActiveTab] = useState<'overview' | 'students' | 'analytics' | 'tests' | 'reports'>('overview');
	const [selectedClass, setSelectedClass] = useState<'11A' | '11B'>('11A');

	const translations = {
		ru: {
			dashboard: '–î–∞—à–±–æ—Ä–¥ —É—á–∏—Ç–µ–ª—è',
			overview: '–û–±–∑–æ—Ä',
			students: '–£—á–µ–Ω–∏–∫–∏',
			analytics: '–ê–Ω–∞–ª–∏—Ç–∏–∫–∞',
			tests: '–¢–µ—Å—Ç—ã',
			reports: '–û—Ç—á–µ—Ç—ã',
			myClasses: '–ú–æ–∏ –∫–ª–∞—Å—Å—ã',
			totalStudents: '–í—Å–µ–≥–æ —É—á–µ–Ω–∏–∫–æ–≤',
			activeTests: '–ê–∫—Ç–∏–≤–Ω—ã–µ —Ç–µ—Å—Ç—ã',
			avgScore: '–°—Ä–µ–¥–Ω–∏–π –±–∞–ª–ª',
			improvement: '–£–ª—É—á—à–µ–Ω–∏–µ',
			recentActivity: '–ü–æ—Å–ª–µ–¥–Ω—è—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å',
			topPerformers: '–õ—É—á—à–∏–µ —É—á–µ–Ω–∏–∫–∏',
			weakAreas: '–°–ª–∞–±—ã–µ –æ–±–ª–∞—Å—Ç–∏',
			createTest: '–°–æ–∑–¥–∞—Ç—å —Ç–µ—Å—Ç',
			viewDetails: '–ü–æ–¥—Ä–æ–±–Ω–µ–µ',
			performance: '–£—Å–ø–µ–≤–∞–µ–º–æ—Å—Ç—å',
			progress: '–ü—Ä–æ–≥—Ä–µ—Å—Å',
			recommendations: '–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏',
			export: '–≠–∫—Å–ø–æ—Ä—Ç',
			studentName: '–ò–º—è —É—á–µ–Ω–∏–∫–∞',
			lastTest: '–ü–æ—Å–ª–µ–¥–Ω–∏–π —Ç–µ—Å—Ç',
			score: '–ë–∞–ª–ª',
			trend: '–¢–µ–Ω–¥–µ–Ω—Ü–∏—è',
			subjects: '–ü—Ä–µ–¥–º–µ—Ç—ã',
			mathematics: '–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞',
			physics: '–§–∏–∑–∏–∫–∞',
			chemistry: '–•–∏–º–∏—è',
			biology: '–ë–∏–æ–ª–æ–≥–∏—è'
		},
		kk: {
			dashboard: '–ú“±“ì–∞–ª—ñ–º –¥–∞—à–±–æ—Ä–¥—ã',
			overview: '–®–æ–ª—É',
			students: '–û“õ—É—à—ã–ª–∞—Ä',
			analytics: '–ê–Ω–∞–ª–∏—Ç–∏–∫–∞',
			tests: '–¢–µ—Å—Ç—ñ–ª–µ—Ä',
			reports: '–ï—Å–µ–ø—Ç–µ—Ä',
			myClasses: '–ú–µ–Ω—ñ“£ —Å—ã–Ω—ã–ø—Ç–∞—Ä—ã–º',
			totalStudents: '–ë–∞—Ä–ª—ã“õ –æ“õ—É—à—ã–ª–∞—Ä',
			activeTests: '–ë–µ–ª—Å–µ–Ω–¥—ñ —Ç–µ—Å—Ç—ñ–ª–µ—Ä',
			avgScore: '–û—Ä—Ç–∞—à–∞ –±–∞–ª–ª',
			improvement: '–ñ–∞“õ—Å–∞—Ä—É',
			recentActivity: '–°–æ“£“ì—ã –±–µ–ª—Å–µ–Ω–¥—ñ–ª—ñ–∫',
			topPerformers: '“Æ–∑–¥—ñ–∫ –æ“õ—É—à—ã–ª–∞—Ä',
			weakAreas: '”ò–ª—Å—ñ–∑ —Å–∞–ª–∞–ª–∞—Ä',
			createTest: '–¢–µ—Å—Ç –∂–∞—Å–∞—É',
			viewDetails: '–¢–æ–ª—ã“ì—ã—Ä–∞“õ',
			performance: '“Æ–ª–≥–µ—Ä—ñ–º',
			progress: '–ü—Ä–æ–≥—Ä–µ—Å—Å',
			recommendations: '“∞—Å—ã–Ω—ã—Å—Ç–∞—Ä',
			export: '–≠–∫—Å–ø–æ—Ä—Ç',
			studentName: '–û“õ—É—à—ã –∞—Ç—ã',
			lastTest: '–°–æ“£“ì—ã —Ç–µ—Å—Ç',
			score: '–ë–∞–ª–ª',
			trend: '“Æ—Ä–¥—ñ—Å',
			subjects: '–ü”ô–Ω–¥–µ—Ä',
			mathematics: '–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞',
			physics: '–§–∏–∑–∏–∫–∞',
			chemistry: '–•–∏–º–∏—è',
			biology: '–ë–∏–æ–ª–æ–≥–∏—è'
		}
	};

	const t = translations[currentLanguage];

	const classData = {
		'11A': {
			students: 28,
			avgScore: 75,
			improvement: '+8%',
			recentTests: [
				{ id: 1, name: t.mathematics, completed: 25, avg: 78 },
				{ id: 2, name: t.physics, completed: 23, avg: 72 },
				{ id: 3, name: t.chemistry, completed: 27, avg: 80 }
			]
		},
		'11B': {
			students: 26,
			avgScore: 71,
			improvement: '+5%',
			recentTests: [
				{ id: 1, name: t.mathematics, completed: 24, avg: 73 },
				{ id: 2, name: t.physics, completed: 22, avg: 69 },
				{ id: 3, name: t.biology, completed: 25, avg: 75 }
			]
		}
	} as const;

	const studentData = [
		{ id: 1, name: '–ê–π–∂–∞–Ω –°–µ–π—Ç–æ–≤–∞', lastTest: t.mathematics, score: 92, trend: 'up', avatar: 'üë©' },
		{ id: 2, name: '–î–∞–Ω–∏—è—Ä –ù—É—Ä–ª–∞–Ω–æ–≤', lastTest: t.physics, score: 88, trend: 'up', avatar: 'üë®' },
		{ id: 3, name: '–ö–∞–º–∏–ª–∞ –ñ–∞–Ω–±–µ–∫–æ–≤–∞', lastTest: t.chemistry, score: 85, trend: 'stable', avatar: 'üë©' },
		{ id: 4, name: '–ê—Ä–º–∞–Ω –î–æ—Å–æ–≤', lastTest: t.mathematics, score: 82, trend: 'down', avatar: 'üë®' },
		{ id: 5, name: '–î–∏–∞–Ω–∞ –ê–±–¥—É–ª–ª–∏–Ω–∞', lastTest: t.biology, score: 79, trend: 'up', avatar: 'üë©' }
	];

	const weakAreas = [
		{ topic: currentLanguage === 'ru' ? '–ò–Ω—Ç–µ–≥—Ä–∞–ª—ã' : '–ò–Ω—Ç–µ–≥—Ä–∞–ª–¥–∞—Ä', percentage: 45, subject: t.mathematics },
		{ topic: currentLanguage === 'ru' ? '–≠–ª–µ–∫—Ç—Ä–æ–¥–∏–Ω–∞–º–∏–∫–∞' : '–≠–ª–µ–∫—Ç—Ä–æ–¥–∏–Ω–∞–º–∏–∫–∞', percentage: 52, subject: t.physics },
		{ topic: currentLanguage === 'ru' ? '–û—Ä–≥–∞–Ω–∏—á–µ—Å–∫–∞—è —Ö–∏–º–∏—è' : '–û—Ä–≥–∞–Ω–∏–∫–∞–ª—ã“õ —Ö–∏–º–∏—è', percentage: 58, subject: t.chemistry }
	];

	const renderOverviewTab = () => (
		<div className="space-y-6">
			<div className="grid grid-cols-1 md:grid-cols-4 gap-6">
				<div className="bg-gradient-to-r from-blue-500 to-blue-600 text-white p-6 rounded-2xl">
					<div className="flex items-center justify-between">
						<div>
							<p className="text-blue-100 text-sm">{t.totalStudents}</p>
							<p className="text-3xl font-bold">{classData[selectedClass].students}</p>
						</div>
						<Users size={40} className="text-blue-200" />
					</div>
				</div>

				<div className="bg-gradient-to-r from-green-500 to-green-600 text-white p-6 rounded-2xl">
					<div className="flex items-center justify-between">
						<div>
							<p className="text-green-100 text-sm">{t.avgScore}</p>
							<p className="text-3xl font-bold">{classData[selectedClass].avgScore}%</p>
						</div>
						<Target size={40} className="text-green-200" />
					</div>
				</div>

				<div className="bg-gradient-to-r from-purple-500 to-purple-600 text-white p-6 rounded-2xl">
					<div className="flex items-center justify-between">
						<div>
							<p className="text-purple-100 text-sm">{t.activeTests}</p>
							<p className="text-3xl font-bold">5</p>
						</div>
						<BookOpen size={40} className="text-purple-200" />
					</div>
				</div>

				<div className="bg-gradient-to-r from-orange-500 to-orange-600 text-white p-6 rounded-2xl">
					<div className="flex items-center justify-between">
						<div>
							<p className="text-orange-100 text-sm">{t.improvement}</p>
							<p className="text-3xl font-bold">{classData[selectedClass].improvement}</p>
						</div>
						<TrendingUp size={40} className="text-orange-200" />
					</div>
				</div>
			</div>

			<div className="grid grid-cols-1 lg:grid-cols-3 gap-6">
				<div className="lg:col-span-2 bg-white rounded-2xl shadow-lg p-6">
					<div className="flex items-center justify-between mb-6">
						<h3 className="text-xl font-bold text-gray-800">{t.recentActivity}</h3>
						<button className="flex items-center gap-2 px-4 py-2 bg-indigo-100 text-indigo-700 rounded-lg hover:bg-indigo-200">
							<Download size={16} />
							{t.export}
						</button>
					</div>

					<div className="space-y-4">
						{classData[selectedClass].recentTests.map((test) => (
							<div key={test.id} className="flex items-center justify-between p-4 bg-gray-50 rounded-xl">
								<div className="flex items-center gap-4">
									<div className="w-10 h-10 bg-indigo-100 rounded-lg flex items-center justify-center">
										<BookOpen size={20} className="text-indigo-600" />
									</div>
									<div>
										<h4 className="font-semibold text-gray-800">{test.name}</h4>
										<p className="text-sm text-gray-600">
											{test.completed} {currentLanguage === 'ru' ? '–∏–∑' : '–¥–µ–Ω'} {classData[selectedClass].students} {currentLanguage === 'ru' ? '–≤—ã–ø–æ–ª–Ω–∏–ª–∏' : '–æ—Ä—ã–Ω–¥–∞–¥—ã'}
										</p>
									</div>
								</div>
								<div className="text-right">
									<p className="text-lg font-bold text-gray-800">{test.avg}%</p>
									<p className="text-sm text-gray-600">{currentLanguage === 'ru' ? '—Å—Ä–µ–¥–Ω–∏–π –±–∞–ª–ª' : '–æ—Ä—Ç–∞—à–∞ –±–∞–ª–ª'}</p>
								</div>
							</div>
						))}
					</div>
				</div>

				<div className="bg-white rounded-2xl shadow-lg p-6">
					<h3 className="text-xl font-bold text-gray-800 mb-6">{t.topPerformers}</h3>
					<div className="space-y-4">
						{studentData.slice(0, 5).map((student, index) => (
							<div key={student.id} className="flex items-center gap-3">
								<div className="flex items-center justify-center w-8 h-8 bg-gradient-to-r from-yellow-400 to-orange-400 text-white rounded-full text-sm font-bold">
									{index + 1}
								</div>
								<div className="text-2xl">{student.avatar}</div>
								<div className="flex-1">
									<p className="font-semibold text-gray-800">{student.name}</p>
									<p className="text-sm text-gray-600">{student.score}%</p>
								</div>
								<div className={`w-6 h-6 rounded-full ${
									student.trend === 'up' ? 'bg-green-100' : 
									student.trend === 'down' ? 'bg-red-100' : 'bg-gray-100'
								}`}> 
									<TrendingUp size={16} className={`m-1 ${
										student.trend === 'up' ? 'text-green-600' : 
										student.trend === 'down' ? 'text-red-600 rotate-180' : 'text-gray-600'
									}`} />
								</div>
							</div>
						))}
					</div>
				</div>
			</div>

			<div className="bg-white rounded-2xl shadow-lg p-6">
				<h3 className="text-xl font-bold text-gray-800 mb-6">{t.weakAreas}</h3>
				<div className="grid grid-cols-1 md:grid-cols-3 gap-6">
					{weakAreas.map((area, index) => (
						<div key={index} className="p-4 border border-gray-200 rounded-xl">
							<div className="flex items-center justify-between mb-3">
								<h4 className="font-semibold text-gray-800">{area.topic}</h4>
								<span className="text-sm text-gray-600">{area.subject}</span>
							</div>
							<div className="w-full bg-gray-200 rounded-full h-3 mb-2">
								<div className="bg-red-500 h-3 rounded-full" style={{ width: `${area.percentage}%` }}></div>
							</div>
							<p className="text-sm text-gray-600">{area.percentage}% {currentLanguage === 'ru' ? '–ø–æ–Ω–∏–º–∞–Ω–∏—è' : '—Ç“Ø—Å—ñ–Ω—É'}</p>
						</div>
					))}
				</div>
			</div>
		</div>
	);

	const renderStudentsTab = () => (
		<div className="bg-white rounded-2xl shadow-lg p-6">
			<div className="flex items-center justify-between mb-6">
				<h3 className="text-xl font-bold text-gray-800">{t.students} - {selectedClass}</h3>
				<div className="flex gap-3">
					<button className="flex items-center gap-2 px-4 py-2 bg-green-100 text-green-700 rounded-lg hover:bg-green-200">
						<MessageSquare size={16} />
						{currentLanguage === 'ru' ? '–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ' : '–•–∞–±–∞—Ä–ª–∞–º–∞ –∂—ñ–±–µ—Ä—É'}
					</button>
					<button className="flex items-center gap-2 px-4 py-2 bg-indigo-100 text-indigo-700 rounded-lg hover:bg-indigo-200">
						<Download size={16} />
						{t.export}
					</button>
				</div>
			</div>

			<div className="overflow-x-auto">
				<table className="w-full">
					<thead>
						<tr className="border-b border-gray-200">
							<th className="text-left py-3 px-4 font-semibold text-gray-700">{t.studentName}</th>
							<th className="text-left py-3 px-4 font-semibold text-gray-700">{t.lastTest}</th>
							<th className="text-left py-3 px-4 font-semibold text-gray-700">{t.score}</th>
							<th className="text-left py-3 px-4 font-semibold text-gray-700">{t.trend}</th>
							<th className="text-left py-3 px-4 font-semibold text-gray-700">{currentLanguage === 'ru' ? '–î–µ–π—Å—Ç–≤–∏—è' : '”ò—Ä–µ–∫–µ—Ç—Ç–µ—Ä'}</th>
						</tr>
					</thead>
					<tbody>
						{studentData.map((student) => (
							<tr key={student.id} className="border-b border-gray-100 hover:bg-gray-50">
								<td className="py-4 px-4">
									<div className="flex items-center gap-3">
										<div className="text-2xl">{student.avatar}</div>
										<span className="font-medium text-gray-800">{student.name}</span>
									</div>
								</td>
								<td className="py-4 px-4 text-gray-600">{student.lastTest}</td>
								<td className="py-4 px-4">
									<span className={`px-3 py-1 rounded-full text-sm font-medium ${
										student.score >= 85 ? 'bg-green-100 text-green-700' :
										student.score >= 70 ? 'bg-yellow-100 text-yellow-700' :
										'bg-red-100 text-red-700'
									}`}>{student.score}%</span>
								</td>
								<td className="py-4 px-4">
									<div className={`w-8 h-8 rounded-full flex items-center justify-center ${
										student.trend === 'up' ? 'bg-green-100' : 
										student.trend === 'down' ? 'bg-red-100' : 'bg-gray-100'
									}`}> 
										<TrendingUp size={16} className={`${
											student.trend === 'up' ? 'text-green-600' : 
											student.trend === 'down' ? 'text-red-600 rotate-180' : 'text-gray-600'
										}`} />
									</div>
								</td>
								<td className="py-4 px-4">
									<button className="text-indigo-600 hover:text-indigo-800 font-medium">{t.viewDetails}</button>
								</td>
							</tr>
						))}
					</tbody>
				</table>
			</div>
		</div>
	);

	const renderAnalyticsTab = () => (
		<div className="space-y-6">
			<div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
				<div className="bg-white rounded-2xl shadow-lg p-6">
					<h3 className="text-xl font-bold text-gray-800 mb-4">{t.performance} {currentLanguage === 'ru' ? '–ø–æ –º–µ—Å—è—Ü–∞–º' : '–∞–π–ª–∞—Ä –±–æ–π—ã–Ω—à–∞'}</h3>
					<div className="h-64 flex items-end justify-between gap-2">
						{[65, 70, 75, 78, 82, 75].map((value, index) => (
							<div key={index} className="flex flex-col items-center gap-2">
								<div className="bg-indigo-500 rounded-t-lg w-8 transition-all hover:bg-indigo-600" style={{ height: `${(value / 100) * 200}px` }}></div>
								<span className="text-xs text-gray-600">{['–Ø–Ω–≤', '–§–µ–≤', '–ú–∞—Ä', '–ê–ø—Ä', '–ú–∞–π', '–ò—é–Ω'][index]}</span>
							</div>
						))}
					</div>
				</div>

				<div className="bg-white rounded-2xl shadow-lg p-6">
					<h3 className="text-xl font-bold text-gray-800 mb-4">{currentLanguage === 'ru' ? '–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ –ø—Ä–µ–¥–º–µ—Ç–∞–º' : '–ü”ô–Ω–¥–µ—Ä –±–æ–π—ã–Ω—à–∞ “Ø–ª–µ—Å—Ç—ñ—Ä—É'}</h3>
					<div className="space-y-4">
						{[
							{ subject: t.mathematics, percentage: 85, color: 'bg-blue-500' },
							{ subject: t.physics, percentage: 70, color: 'bg-green-500' },
							{ subject: t.chemistry, percentage: 78, color: 'bg-purple-500' },
							{ subject: t.biology, percentage: 82, color: 'bg-orange-500' }
						].map((item, index) => (
							<div key={index} className="space-y-2">
								<div className="flex justify-between">
									<span className="font-medium text-gray-700">{item.subject}</span>
									<span className="text-gray-600">{item.percentage}%</span>
								</div>
								<div className="w-full bg-gray-200 rounded-full h-3">
									<div className={`${item.color} h-3 rounded-full transition-all`} style={{ width: `${item.percentage}%` }}></div>
								</div>
							</div>
						))}
					</div>
				</div>
			</div>

			<div className="bg-white rounded-2xl shadow-lg p-6">
				<h3 className="text-xl font-bold text-gray-800 mb-4">{currentLanguage === 'ru' ? 'AI –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è –∫–ª–∞—Å—Å–∞' : '–°—ã–Ω—ã–ø “Ø—à—ñ–Ω AI “±—Å—ã–Ω—ã—Å—Ç–∞—Ä—ã'}</h3>
				<div className="grid grid-cols-1 md:grid-cols-2 gap-6">
					<div className="p-4 bg-blue-50 rounded-xl border-l-4 border-blue-500">
						<h4 className="font-semibold text-blue-800 mb-2">{currentLanguage === 'ru' ? '–°–∏–ª—å–Ω—ã–µ —Å—Ç–æ—Ä–æ–Ω—ã' : '–ö“Ø—à—Ç—ñ –∂–∞“õ—Ç–∞—Ä—ã'}</h4>
						<ul className="text-sm text-blue-700 space-y-1">
							<li>‚Ä¢ {currentLanguage === 'ru' ? '–•–æ—Ä–æ—à–µ–µ –ø–æ–Ω–∏–º–∞–Ω–∏–µ –∞–ª–≥–µ–±—Ä—ã' : '–ê–ª–≥–µ–±—Ä–∞–Ω—ã –∂–∞“õ—Å—ã —Ç“Ø—Å—ñ–Ω—É'}</li>
							<li>‚Ä¢ {currentLanguage === 'ru' ? '–°—Ç–∞–±–∏–ª—å–Ω—ã–π –ø—Ä–æ–≥—Ä–µ—Å—Å –≤ –≥–µ–æ–º–µ—Ç—Ä–∏–∏' : '–ì–µ–æ–º–µ—Ç—Ä–∏—è–¥–∞ —Ç“±—Ä–∞“õ—Ç—ã –ø—Ä–æ–≥—Ä–µ—Å—Å'}</li>
							<li>‚Ä¢ {currentLanguage === 'ru' ? '–ê–∫—Ç–∏–≤–Ω–æ–µ —É—á–∞—Å—Ç–∏–µ –≤ —Ç–µ—Å—Ç–∞—Ö' : '–¢–µ—Å—Ç—ñ–ª–µ—Ä–≥–µ –±–µ–ª—Å–µ–Ω–¥—ñ “õ–∞—Ç—ã—Å—É'}</li>
						</ul>
					</div>
					
					<div className="p-4 bg-orange-50 rounded-xl border-l-4 border-orange-500">
						<h4 className="font-semibold text-orange-800 mb-2">{currentLanguage === 'ru' ? '–û–±–ª–∞—Å—Ç–∏ –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è' : '–ñ–∞“õ—Å–∞—Ä—Ç—É —Å–∞–ª–∞–ª–∞—Ä—ã'}</h4>
						<ul className="text-sm text-orange-700 space-y-1">
							<li>‚Ä¢ {currentLanguage === 'ru' ? '–ù—É–∂–Ω–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è —Ä–∞–±–æ—Ç–∞ —Å –∏–Ω—Ç–µ–≥—Ä–∞–ª–∞–º–∏' : '–ò–Ω—Ç–µ–≥—Ä–∞–ª–¥–∞—Ä–º–µ–Ω “õ–æ—Å—ã–º—à–∞ –∂“±–º—ã—Å –∫–µ—Ä–µ–∫'}</li>
							<li>‚Ä¢ {currentLanguage === 'ru' ? '–ü–æ–≤—ã—Å–∏—Ç—å —Ç–æ—á–Ω–æ—Å—Ç—å –≤ –≤—ã—á–∏—Å–ª–µ–Ω–∏—è—Ö' : '–ï—Å–µ–ø—Ç–µ—É–ª–µ—Ä–¥–µ–≥—ñ –¥”ô–ª–¥—ñ–∫—Ç—ñ –∞—Ä—Ç—Ç—ã—Ä—É'}</li>
							<li>‚Ä¢ {currentLanguage === 'ru' ? '–ë–æ–ª—å—à–µ –ø—Ä–∞–∫—Ç–∏–∫–∏ –ø–æ —Ñ–∏–∑–∏–∫–µ' : '–§–∏–∑–∏–∫–∞ –±–æ–π—ã–Ω—à–∞ –∫”©–±—ñ—Ä–µ–∫ –∂–∞—Ç—Ç—ã“ì—É'}</li>
						</ul>
					</div>
				</div>
			</div>
		</div>
	);

	return (
		<div className="min-h-screen bg-gradient-to-br from-indigo-50 to-white p-4">
			<div className="max-w-7xl mx-auto">
				<div className="flex justify-between items-center mb-8">
					<div>
						<h1 className="text-3xl font-bold text-gray-800">{t.dashboard}</h1>
						<p className="text-gray-600 mt-1">{currentLanguage === 'ru' ? '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, –ê–π–≥—É–ª—å –°–µ—Ä–∏–∫–æ–≤–∞' : '“ö–æ—à –∫–µ–ª–¥—ñ“£—ñ–∑, –ê–π–≥“Ø–ª –°–µ—Ä—ñ–∫–æ–≤–∞'}</p>
					</div>
					
					<div className="flex items-center gap-4">
						<select 
							value={selectedClass}
							onChange={(e) => setSelectedClass(e.target.value as '11A' | '11B')}
							className="px-4 py-2 bg-white border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500"
						>
							<option value="11A">–ö–ª–∞—Å—Å 11–ê</option>
							<option value="11B">–ö–ª–∞—Å—Å 11–ë</option>
						</select>

						<button
							onClick={() => setCurrentLanguage(currentLanguage === 'ru' ? 'kk' : 'ru')}
							className="px-4 py-2 bg-indigo-100 text-indigo-700 rounded-lg font-medium hover:bg-indigo-200"
						>
							{currentLanguage === 'ru' ? '“öAZ' : 'RUS'}
						</button>

						<button className="flex items-center gap-2 px-4 py-2 bg-indigo-600 text-white rounded-lg hover:bg-indigo-700">
							<Plus size={20} />
							{t.createTest}
						</button>
					</div>
				</div>

				<div className="flex space-x-1 mb-8 bg-white rounded-2xl p-2 shadow-lg">
					{[
						{ id: 'overview', label: t.overview, icon: BarChart3 },
						{ id: 'students', label: t.students, icon: Users },
						{ id: 'analytics', label: t.analytics, icon: PieChart },
						{ id: 'tests', label: t.tests, icon: BookOpen },
						{ id: 'reports', label: t.reports, icon: LineChart }
					].map((tab) => (
						<button
							key={tab.id as string}
							onClick={() => setActiveTab(tab.id as typeof activeTab)}
							className={`flex items-center gap-2 px-6 py-3 rounded-xl font-medium transition-colors ${
								activeTab === tab.id
									? 'bg-indigo-600 text-white'
									: 'text-gray-600 hover:text-gray-800 hover:bg-gray-100'
							}`}
						>
							<tab.icon size={20} />
							{tab.label}
						</button>
					))}
				</div>

				<div>
					{activeTab === 'overview' && renderOverviewTab()}
					{activeTab === 'students' && renderStudentsTab()}
					{activeTab === 'analytics' && renderAnalyticsTab()}
					{activeTab === 'tests' && (
						<div className="bg-white rounded-2xl shadow-lg p-8 text-center">
							<BookOpen size={64} className="mx-auto text-gray-400 mb-4" />
							<h3 className="text-xl font-bold text-gray-800 mb-2">{currentLanguage === 'ru' ? '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–µ—Å—Ç–∞–º–∏' : '–¢–µ—Å—Ç—ñ–ª–µ—Ä–¥—ñ –±–∞—Å“õ–∞—Ä—É'}</h3>
							<p className="text-gray-600 mb-6">{currentLanguage === 'ru' ? '–°–æ–∑–¥–∞–≤–∞–π—Ç–µ –∏ —É–ø—Ä–∞–≤–ª—è–π—Ç–µ —Ç–µ—Å—Ç–∞–º–∏ –¥–ª—è –≤–∞—à–∏—Ö —É—á–µ–Ω–∏–∫–æ–≤' : '–û“õ—É—à—ã–ª–∞—Ä—ã“£—ã–∑ “Ø—à—ñ–Ω —Ç–µ—Å—Ç—ñ–ª–µ—Ä –∂–∞—Å–∞“£—ã–∑ –∂”ô–Ω–µ –±–∞—Å“õ–∞—Ä—ã“£—ã–∑'}</p>
							<button className="flex items-center gap-2 mx-auto px-6 py-3 bg-indigo-600 text-white rounded-xl hover:bg-indigo-700">
								<Plus size={20} />
								{t.createTest}
							</button>
						</div>
					)}
					{activeTab === 'reports' && (
						<div className="bg-white rounded-2xl shadow-lg p-8 text-center">
							<Download size={64} className="mx-auto text-gray-400 mb-4" />
							<h3 className="text-xl font-bold text-gray-800 mb-2">{currentLanguage === 'ru' ? '–û—Ç—á–µ—Ç—ã –∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∞' : '–ï—Å–µ–ø—Ç–µ—Ä –º–µ–Ω –∞–Ω–∞–ª–∏—Ç–∏–∫–∞'}</h3>
							<p className="text-gray-600 mb-6">{currentLanguage === 'ru' ? '–ì–µ–Ω–µ—Ä–∏—Ä—É–π—Ç–µ –ø–æ–¥—Ä–æ–±–Ω—ã–µ –æ—Ç—á–µ—Ç—ã –æ –ø—Ä–æ–≥—Ä–µ—Å—Å–µ —É—á–µ–Ω–∏–∫–æ–≤' : '–û“õ—É—à—ã–ª–∞—Ä–¥—ã“£ –ø—Ä–æ–≥—Ä–µ—Å—ñ —Ç—É—Ä–∞–ª—ã —Ç–æ–ª—ã“õ –µ—Å–µ–ø—Ç–µ—Ä –∂–∞—Å–∞“£—ã–∑'}</p>
							<div className="flex gap-4 justify-center">
								<button className="px-6 py-3 bg-green-600 text-white rounded-xl hover:bg-green-700">
									{currentLanguage === 'ru' ? '–≠–∫—Å–ø–æ—Ä—Ç –≤ Excel' : 'Excel-–≥–µ —ç–∫—Å–ø–æ—Ä—Ç'}
								</button>
								<button className="px-6 py-3 bg-red-600 text-white rounded-xl hover:bg-red-700">
									{currentLanguage === 'ru' ? '–°–æ–∑–¥–∞—Ç—å PDF' : 'PDF –∂–∞—Å–∞—É'}
								</button>
							</div>
						</div>
					)}
				</div>
			</div>
		</div>
	);
};

export default TeacherDashboard;


